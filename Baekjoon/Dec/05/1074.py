'''
Title   : Z
Level   : S1
Problem : 2**N x 2**N인 2차원 배열을 z모양 탐색한다.
          왼쪽위/오른쪽위/왼쪽아래/오른쪽 아래 칸 순서대로 방문한다.
          r행 c열을 몇번째로 방문하는지 출력한다.
Type    : 분할 정복
Idea    : 1. 주어진 r, c를 토대로 어느 구역(왼쪽 위/오른쪽 위/왼쪽 아래/오른쪽 아래)인지 판단한다.
          2. 각 구역의 시작 값은 (2**2N)//2*0,1,2,3(왼위/오위/왼아/오아)
          3. N == 1이 될 때까지 N -= 1을 하며 시작값을 더한다.
          https://ggasoon2.tistory.com/11 참고
'''

n,r,c = map(int, input().split())
ans = 0
while True:
    if n < 1:
        break
    if 0 <= r < 2**(n-1) and 0 <= c < 2**(n-1) : # 왼쪽 위
        ans += 2 ** ((2 * n) - 2) * 0
    elif 0 <= r < 2**(n-1) and 2**(n-1) <= c < 2**n: # 오른쪽 위
        ans += 2 ** ((2 * n) - 2) * 1
        c -= 2**(n-1)
    elif 2**(n-1) <= r < 2**n and 0 <= c < 2**(n-1) : # 왼쪽 아래
        ans += 2 ** ((2 * n) - 2) * 2
        r -= 2**(n-1)
    else: # 오른쪽 아래
        ans += 2 ** ((2 * n) - 2) * 3
        c -= 2**(n-1)
        r -= 2**(n-1)
    n -= 1
print(ans)